{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Footer from \"@/components/Footer\";\nimport PersonPage from \"@/components/PersonPage\";\nimport BlogList from \"@/components/BlogList\";\nimport ActivityList from \"@/components/ActivityList\";\nexport default {\n  components: {\n    ActivityList,\n    BlogList,\n    Footer,\n    PersonPage\n  },\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      dialogVisible: false,\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: 'blur'\n        }]\n      },\n      activeName: '个人资料',\n      likesCurrent: '博客',\n      collectCurrent: '博客',\n      commentCurrent: '博客'\n    };\n  },\n  created() {},\n  methods: {\n    updateUser() {\n      // 触发父级的数据更新\n      this.$emit('update:user');\n    },\n    addBlog() {\n      window.open('/front/newBlog');\n    },\n    clickTab(tab) {\n      console.log(tab);\n    },\n    update() {\n      // 保存当前的用户信息到数据库\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          // 成功更新\n          this.$message.success('保存成功');\n          // 更新浏览器缓存里的用户信息\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          // 触发父级的数据更新\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.$set(this.user, 'avatar', response.data);\n    },\n    // 修改密码\n    updatePassword() {\n      this.dialogVisible = true;\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              // 成功更新\n              this.$message.success('修改密码成功');\n              this.$router.push('/login');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Footer","PersonPage","BlogList","ActivityList","components","data","validatePassword","rule","value","callback","Error","user","newPassword","JSON","parse","localStorage","getItem","dialogVisible","rules","password","required","message","trigger","confirmPassword","validator","activeName","likesCurrent","collectCurrent","commentCurrent","created","methods","updateUser","$emit","addBlog","window","open","clickTab","tab","console","log","update","$request","put","then","res","code","$message","success","setItem","stringify","error","msg","handleAvatarSuccess","response","file","fileList","$set","updatePassword","save","$refs","formRef","validate","valid","$router","push"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\" style=\"width: 50%\">\r\n\r\n    <el-tabs v-model=\"activeName\" @tab-click=\"clickTab\">\r\n      <el-tab-pane label=\"个人资料\" name=\"个人资料\">\r\n        <person-page @update:user=\"updateUser\" />\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"我发表的帖子\" name=\"我发表的帖子\">\r\n        <div class=\"card\" style=\"padding: 5px\"><el-button type=\"primary\" @click=\"addBlog\">发表新帖子</el-button></div>\r\n        <div style=\"margin-top: 10px\">\r\n          <blog-list type=\"user\" :show-opt=\"true\" />\r\n        </div>\r\n      </el-tab-pane>\r\n<!--      <el-tab-pane label=\"我报名的活动\" name=\"我报名的活动\">-->\r\n<!--        <activity-list type=\"user\" :span=\"8\" />-->\r\n<!--      </el-tab-pane>-->\r\n      <el-tab-pane label=\"我的点赞\" name=\"我的点赞\">\r\n        <div class=\"card\" style=\"padding: 5px; display: flex\">\r\n          <div class=\"category-btn\" :class=\"{ 'active' : likesCurrent === '博客' }\" @click=\"likesCurrent = '博客'\">博客</div>\r\n          <div class=\"category-btn\" :class=\"{ 'active' : likesCurrent === '活动' }\" @click=\"likesCurrent = '活动'\">活动</div>\r\n        </div>\r\n        <div style=\"margin-top: 10px\">\r\n          <blog-list v-if=\"likesCurrent === '博客'\" type=\"like\"></blog-list>\r\n          <activity-list v-if=\"likesCurrent === '活动'\" :span=\"8\" type=\"like\"></activity-list>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"我的收藏\" name=\"我的收藏\">\r\n        <div class=\"card\" style=\"padding: 5px; display: flex\">\r\n          <div class=\"category-btn\" :class=\"{ 'active' : collectCurrent === '博客' }\"  @click=\"collectCurrent = '博客'\">博客</div>\r\n          <div class=\"category-btn\" :class=\"{ 'active' : collectCurrent === '活动' }\" @click=\"collectCurrent = '活动'\">活动</div>\r\n        </div>\r\n        <div style=\"margin-top: 10px\">\r\n          <blog-list v-if=\"collectCurrent === '博客'\" type=\"collect\"></blog-list>\r\n          <activity-list v-if=\"collectCurrent === '活动'\" :span=\"8\" type=\"collect\"></activity-list>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"我的评论\" name=\"我的评论\">\r\n        <div class=\"card\" style=\"padding: 5px; display: flex\">\r\n          <div class=\"category-btn\" :class=\"{ 'active' : commentCurrent === '博客' }\"  @click=\"commentCurrent = '博客'\">博客</div>\r\n          <div class=\"category-btn\" :class=\"{ 'active' : commentCurrent === '活动' }\" @click=\"commentCurrent = '活动'\">活动</div>\r\n        </div>\r\n        <div style=\"margin-top: 10px\">\r\n          <blog-list v-if=\"commentCurrent === '博客'\" type=\"comment\"></blog-list>\r\n          <activity-list v-if=\"commentCurrent === '活动'\" :span=\"8\" type=\"comment\"></activity-list>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n    <Footer />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Footer from \"@/components/Footer\";\r\nimport PersonPage from \"@/components/PersonPage\";\r\nimport BlogList from \"@/components/BlogList\";\r\nimport ActivityList from \"@/components/ActivityList\";\r\n\r\nexport default {\r\n  components: {\r\n    ActivityList,\r\n    BlogList,\r\n    Footer,\r\n    PersonPage\r\n  },\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请确认密码'))\r\n      } else if (value !== this.user.newPassword) {\r\n        callback(new Error('确认密码错误'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      dialogVisible: false,\r\n\r\n      rules: {\r\n        password: [\r\n          { required: true, message: '请输入原始密码', trigger: 'blur' },\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { validator: validatePassword, required: true, trigger: 'blur' },\r\n        ],\r\n      },\r\n      activeName: '个人资料',\r\n      likesCurrent: '博客',\r\n      collectCurrent: '博客',\r\n      commentCurrent: '博客',\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    updateUser() {\r\n      // 触发父级的数据更新\r\n      this.$emit('update:user')\r\n    },\r\n    addBlog() {\r\n      window.open('/front/newBlog')\r\n    },\r\n    clickTab(tab) {\r\n      console.log(tab)\r\n    },\r\n    update() {\r\n      // 保存当前的用户信息到数据库\r\n      this.$request.put('/user/update', this.user).then(res => {\r\n        if (res.code === '200') {\r\n          // 成功更新\r\n          this.$message.success('保存成功')\r\n          // 更新浏览器缓存里的用户信息\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n\r\n          // 触发父级的数据更新\r\n          this.$emit('update:user')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把user的头像属性换成上传的图片的链接\r\n      this.$set(this.user, 'avatar', response.data)\r\n    },\r\n    // 修改密码\r\n    updatePassword() {\r\n      this.dialogVisible = true\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request.put('/updatePassword', this.user).then(res => {\r\n            if (res.code === '200') {\r\n              // 成功更新\r\n              this.$message.success('修改密码成功')\r\n              this.$router.push('/login')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n/deep/.el-upload {\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n}\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n  border-radius: 50%;\r\n}\r\n.category-btn {\r\n  width: fit-content;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.active {\r\n  background-color: #2a60c9 !important;\r\n  color: white !important;\r\n}\r\n</style>\r\n"],"mappings":";AAqDA,OAAAA,MAAA;AACA,OAAAC,UAAA;AACA,OAAAC,QAAA;AACA,OAAAC,YAAA;AAEA;EACAC,UAAA;IACAD,YAAA;IACAD,QAAA;IACAF,MAAA;IACAC;EACA;EACAI,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,IAAA,EAAAE,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,aAAA;MAEAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,WAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,eAAA,GACA;UAAAC,SAAA,EAAAlB,gBAAA;UAAAc,QAAA;UAAAE,OAAA;QAAA;MAEA;MACAG,UAAA;MACAC,YAAA;MACAC,cAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,WAAA;MACA;MACA,KAAAC,KAAA;IACA;IACAC,QAAA;MACAC,MAAA,CAAAC,IAAA;IACA;IACAC,SAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;IACAG,OAAA;MACA;MACA,KAAAC,QAAA,CAAAC,GAAA,sBAAA/B,IAAA,EAAAgC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA;UACAhC,YAAA,CAAAiC,OAAA,YAAAnC,IAAA,CAAAoC,SAAA,MAAAtC,IAAA;;UAEA;UACA,KAAAqB,KAAA;QACA;UACA,KAAAc,QAAA,CAAAI,KAAA,CAAAN,GAAA,CAAAO,GAAA;QACA;MACA;IACA;IACAC,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAA7C,IAAA,YAAA0C,QAAA,CAAAhD,IAAA;IACA;IACA;IACAoD,eAAA;MACA,KAAAxC,aAAA;IACA;IACAyC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAArB,QAAA,CAAAC,GAAA,yBAAA/B,IAAA,EAAAgC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAgB,OAAA,CAAAC,IAAA;YACA;cACA,KAAAlB,QAAA,CAAAI,KAAA,CAAAN,GAAA,CAAAO,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}